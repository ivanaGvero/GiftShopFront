{"ast":null,"code":"var _jsxFileName = \"/Users/jovana/Downloads/ErpProject/ERPFrontend/src/pages/Review/ReviewAdd.jsx\",\n    _s = $RefreshSig$();\n\n/*import { useEffect, useRef, useState } from \"react\"\r\nimport productService from \"../../services/product.service\";\r\nimport reviewService from \"../../services/review.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function ReviewAdd() {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const ratingRef = useRef(null);\r\n    const productRef = useRef(null);\r\n    const commentRef = useRef(null);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const productsData = await productService.getAll();\r\n            setProducts(productsData.data);\r\n            productRef.current = products.find(x => x.productId === +id);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    function save() {\r\n        \r\n        const comment = commentRef.current.value;\r\n        const rating = ratingRef.current.value;\r\n        const product = products.find(x => x.productId === +productRef.current.productId);\r\n        \r\n        if (!comment || !rating || !product) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        if (rating < 0 || rating > 5) {\r\n            alert(\"Wrong value entered for rating\");\r\n            return;\r\n        }\r\n\r\n        reviewService.create({\r\n            product,\r\n            rating,\r\n            comment,\r\n            user: {\r\n                userId: localStorage.getItem('userId')\r\n            }\r\n        })\r\n        .then(data => {\r\n            console.log(\"Successfully saved\")\r\n            setError(false);\r\n            alert(\"Successfully saved\");\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>New review</h1>\r\n\r\n            <div className=\"text-left m-5\"style={{ marginLeft: \"-700px\" }}>\r\n                <img src='/rating.png' alt='login' width={130} height={130} />\r\n            </div>\r\n            <div className=\"w-50 m-auto\">\r\n\r\n                <form>\r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Product</label>\r\n                            <select ref={productRef} className=\"form-control\" disabled>\r\n                                {products.map((p, idx) => (\r\n                                    <option key={idx} value={p.productId}>{p.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                      \r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Rating</label>\r\n                            <input type=\"number\" ref={ratingRef} min={0} max={5} className=\"form-control\" name=\"price\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Comment</label>\r\n                            <textarea ref={commentRef} className=\"form-control\"></textarea>\r\n                        </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={save}>Save</button>\r\n                    </div>\r\n\r\n                    {error && <div className=\"mt-2 bg-danger text-center\">All fields are required</div>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n*/\nimport { useEffect, useRef, useState } from \"react\";\nimport productService from \"../../services/product.service\";\nimport reviewService from \"../../services/review.service\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReviewAdd() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  const ratingRef = useRef(null);\n  const commentRef = useRef(null);\n  const productRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const productsData = await productService.getAll();\n        setProducts(productsData.data);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const selectedProduct = products.find(p => p.productId === +id);\n    productRef.current = selectedProduct;\n  }, [id, products]);\n\n  function save() {\n    const comment = commentRef.current.value;\n    const rating = ratingRef.current.value;\n    const selectedProduct = productRef.current;\n\n    if (!comment || !rating || !selectedProduct) {\n      setError(true);\n      return;\n    }\n\n    if (rating < 0 || rating > 5) {\n      alert(\"Wrong value entered for rating\");\n      return;\n    }\n\n    reviewService.create({\n      product: selectedProduct,\n      rating,\n      comment,\n      user: {\n        userId: localStorage.getItem('userId')\n      }\n    }).then(data => {\n      console.log(\"Successfully saved\");\n      setError(false);\n      alert(\"Successfully saved\");\n    }).catch(err => {\n      console.error(\"Error saving review:\", err);\n      alert(\"Error saving review\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-left m-5\",\n      style: {\n        marginLeft: \"-700px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/rating.png\",\n        alt: \"login\",\n        width: 130,\n        height: 130\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 m-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            ref: ratingRef,\n            min: 0,\n            max: 5,\n            className: \"form-control\",\n            name: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: commentRef,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: save,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 bg-danger text-center\",\n          children: \"All fields are required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReviewAdd, \"SlpSzSYiC4JJMKePFUy1MC9yUjg=\", false, function () {\n  return [useParams];\n});\n\n_c = ReviewAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewAdd\");","map":{"version":3,"names":["useEffect","useRef","useState","productService","reviewService","useParams","ReviewAdd","id","products","setProducts","error","setError","ratingRef","commentRef","productRef","fetchData","productsData","getAll","data","console","selectedProduct","find","p","productId","current","save","comment","value","rating","alert","create","product","user","userId","localStorage","getItem","then","log","catch","err","marginLeft"],"sources":["/Users/jovana/Downloads/ErpProject/ERPFrontend/src/pages/Review/ReviewAdd.jsx"],"sourcesContent":["/*import { useEffect, useRef, useState } from \"react\"\r\nimport productService from \"../../services/product.service\";\r\nimport reviewService from \"../../services/review.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function ReviewAdd() {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const ratingRef = useRef(null);\r\n    const productRef = useRef(null);\r\n    const commentRef = useRef(null);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const productsData = await productService.getAll();\r\n            setProducts(productsData.data);\r\n            productRef.current = products.find(x => x.productId === +id);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    function save() {\r\n        \r\n        const comment = commentRef.current.value;\r\n        const rating = ratingRef.current.value;\r\n        const product = products.find(x => x.productId === +productRef.current.productId);\r\n        \r\n        if (!comment || !rating || !product) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        if (rating < 0 || rating > 5) {\r\n            alert(\"Wrong value entered for rating\");\r\n            return;\r\n        }\r\n\r\n        reviewService.create({\r\n            product,\r\n            rating,\r\n            comment,\r\n            user: {\r\n                userId: localStorage.getItem('userId')\r\n            }\r\n        })\r\n        .then(data => {\r\n            console.log(\"Successfully saved\")\r\n            setError(false);\r\n            alert(\"Successfully saved\");\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>New review</h1>\r\n\r\n            <div className=\"text-left m-5\"style={{ marginLeft: \"-700px\" }}>\r\n                <img src='/rating.png' alt='login' width={130} height={130} />\r\n            </div>\r\n            <div className=\"w-50 m-auto\">\r\n\r\n                <form>\r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Product</label>\r\n                            <select ref={productRef} className=\"form-control\" disabled>\r\n                                {products.map((p, idx) => (\r\n                                    <option key={idx} value={p.productId}>{p.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                      \r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Rating</label>\r\n                            <input type=\"number\" ref={ratingRef} min={0} max={5} className=\"form-control\" name=\"price\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-2\">\r\n                            <label>Comment</label>\r\n                            <textarea ref={commentRef} className=\"form-control\"></textarea>\r\n                        </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={save}>Save</button>\r\n                    </div>\r\n\r\n                    {error && <div className=\"mt-2 bg-danger text-center\">All fields are required</div>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n*/\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport productService from \"../../services/product.service\";\r\nimport reviewService from \"../../services/review.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function ReviewAdd() {\r\n    const { id } = useParams();\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const ratingRef = useRef(null);\r\n    const commentRef = useRef(null);\r\n    const productRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const productsData = await productService.getAll();\r\n                setProducts(productsData.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const selectedProduct = products.find(p => p.productId === +id);\r\n        productRef.current = selectedProduct;\r\n    }, [id, products]);\r\n\r\n    function save() {\r\n        const comment = commentRef.current.value;\r\n        const rating = ratingRef.current.value;\r\n        const selectedProduct = productRef.current;\r\n        \r\n        if (!comment || !rating || !selectedProduct) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        if (rating < 0 || rating > 5) {\r\n            alert(\"Wrong value entered for rating\");\r\n            return;\r\n        }\r\n\r\n        reviewService.create({\r\n            product: selectedProduct,\r\n            rating,\r\n            comment,\r\n            user: {\r\n                userId: localStorage.getItem('userId')\r\n            }\r\n        })\r\n        .then(data => {\r\n            console.log(\"Successfully saved\");\r\n            setError(false);\r\n            alert(\"Successfully saved\");\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error saving review:\", err);\r\n            alert(\"Error saving review\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>New review</h1>\r\n\r\n            <div className=\"text-left m-5\" style={{ marginLeft: \"-700px\" }}>\r\n                <img src='/rating.png' alt='login' width={130} height={130} />\r\n            </div>\r\n            <div className=\"w-50 m-auto\">\r\n                <form>\r\n                  \r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Rating</label>\r\n                        <input type=\"number\" ref={ratingRef} min={0} max={5} className=\"form-control\" name=\"price\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Comment</label>\r\n                        <textarea ref={commentRef} className=\"form-control\"></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={save}>Save</button>\r\n                    </div>\r\n\r\n                    {error && <div className=\"mt-2 bg-danger text-center\">All fields are required</div>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"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"},"metadata":{},"sourceType":"module"}