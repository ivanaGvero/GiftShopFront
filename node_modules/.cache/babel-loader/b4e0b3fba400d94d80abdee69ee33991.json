{"ast":null,"code":"var _jsxFileName = \"/Users/jovana/Downloads/ErpProject/ERPFrontend/src/pages/Customer/CustomerEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; //import addressService from \"../../services/address.service\";\n\nimport customerService from \"../../services/customer.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CustomerEdit() {\n  _s();\n\n  const [addresses, setAddresses] = useState([]);\n  const nameRef = useRef(null);\n  const surnameRef = useRef(null);\n  const addressRef = useRef(null);\n  const phoneRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      //const addressesData = await addressService.getAll();\n      //setAddresses(addressesData.data);\n      const response = await customerService.get(id);\n      nameRef.current.value = response.data.user.name;\n      surnameRef.current.value = response.data.user.surname;\n      phoneRef.current.value = response.data.phone;\n      addressRef.current.value = response.data.address;\n    };\n\n    fetchData();\n  }, []);\n  const [error, setError] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  function save() {\n    const name = nameRef.current.value;\n    const surname = surnameRef.current.value;\n    const phone = phoneRef.current.value;\n    const address = addressRef.current.value; //const address = addresses.find(x => x.addressId === +addressRef.current.value);\n\n    if (!name || !surname || !address || !phone) {\n      setError(true);\n      return;\n    }\n\n    customerService.update(id, {\n      user: {\n        name,\n        surname\n      },\n      phone,\n      address\n    }).then(data => {\n      console.log(\"Successfully updated\");\n      setError(false);\n      alert(\"Successfully updated\");\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 m-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: nameRef,\n            className: \"form-control\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: surnameRef,\n            className: \"form-control\",\n            name: \"surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: phoneRef,\n            className: \"form-control\",\n            name: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: addressRef,\n            className: \"form-control\",\n            name: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: save,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 bg-danger text-center\",\n          children: \"All fields are required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerEdit, \"kzd4pAOL7QV1pGk0Z3MIB8QAaXk=\", false, function () {\n  return [useParams];\n});\n\n_c = CustomerEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerEdit\");","map":{"version":3,"names":["useEffect","useRef","useState","useParams","customerService","CustomerEdit","addresses","setAddresses","nameRef","surnameRef","addressRef","phoneRef","fetchData","response","get","id","current","value","data","user","name","surname","phone","address","error","setError","save","update","then","console","log","alert","catch","err"],"sources":["/Users/jovana/Downloads/ErpProject/ERPFrontend/src/pages/Customer/CustomerEdit.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\";\r\n//import addressService from \"../../services/address.service\";\r\nimport customerService from \"../../services/customer.service\";\r\n\r\nexport default function CustomerEdit() {\r\n\r\n    const [addresses, setAddresses] = useState([]);\r\n\r\n    const nameRef = useRef(null);\r\n    const surnameRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const phoneRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            //const addressesData = await addressService.getAll();\r\n            //setAddresses(addressesData.data);\r\n\r\n            const response = await customerService.get(id);\r\n            nameRef.current.value = response.data.user.name;\r\n            surnameRef.current.value = response.data.user.surname;\r\n            phoneRef.current.value = response.data.phone;\r\n            addressRef.current.value = response.data.address;\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const {id} = useParams();\r\n\r\n    function save() {\r\n        \r\n        const name = nameRef.current.value;\r\n        const surname = surnameRef.current.value;\r\n        const phone = phoneRef.current.value;\r\n        const address = addressRef.current.value;\r\n        //const address = addresses.find(x => x.addressId === +addressRef.current.value);\r\n        \r\n        if (!name || !surname || !address || !phone) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        customerService.update(id, {\r\n            user: {\r\n                name,\r\n                surname,\r\n            },\r\n            phone,\r\n            address\r\n        })\r\n        .then(data => {\r\n            console.log(\"Successfully updated\")\r\n            setError(false);\r\n            alert(\"Successfully updated\");\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Edit customer</h1>\r\n\r\n            <div className=\"w-50 m-auto\">\r\n                <form>\r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Name</label>\r\n                        <input ref={nameRef} className=\"form-control\" name=\"name\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Surname</label>\r\n                        <input type=\"text\" ref={surnameRef} className=\"form-control\" name=\"surname\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Phone</label>\r\n                        <input type=\"text\" ref={phoneRef} className=\"form-control\" name=\"phone\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" ref={addressRef} className=\"form-control\" name=\"address\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={save}>Save</button>\r\n                    </div>\r\n\r\n                    {error && <div className=\"mt-2 bg-danger text-center\">All fields are required</div>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}